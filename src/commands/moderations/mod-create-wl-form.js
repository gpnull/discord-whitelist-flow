const {
  ButtonBuilder,
  ButtonStyle,
  ActionRowBuilder,
  EmbedBuilder,
  ComponentType,
} = require("discord.js");
require("dotenv").config();
const discordData = require("./mod-get-discord-data.js");
const createDiscordData = require("./mod-create-discord-data.js");

module.exports = {
  name: "create-wl-form",
  description: "T·∫°o form ƒëƒÉng k√Ω whitelist cho ng∆∞·ªùi ch∆°i.",

  callback: async (client, interaction) => {
    try {
      await interaction.deferReply({ ephemeral: true });

      const channel = await client.channels.cache.get(
        `${process.env.REGISTRATION_WHITELIST_CHANNEL}`
      );
      if (!channel) return;

      const embed = new EmbedBuilder()
        .setTitle("ƒêƒÇNG K√ù WHITELIST - DREAMLAND")
        .setDescription("Ch√†o m·ª´ng c√°c qu√Ω c∆∞ d√¢n ƒë·∫øn v·ªõi Dreamland")
        .setColor("#CC99FF") // setColor("Random")
        .addFields(
          {
            name: `üìã \_\_ƒê∆°n ƒëƒÉng k√≠ Whitelist DreamLand:\_\_`,
            value: `‚Ä¢ ƒê·ªô tu·ªïi c√≥ th·ªÉ tham gia: 16+\n‚Ä¢ Kh√¥ng ƒë∆∞·ª£c chia s·∫ª hay h∆∞·ªõng d·∫´n l√†m ƒë∆°n cho ng∆∞·ªùi ch∆°i kh√°c. Ch√∫ng m√¨nh s·∫Ω ki·ªÉm tra kƒ© c√°c ƒë∆°n c√≥ n·ªôi dung tr√πng v·ªõi nhau.\n‚Ä¢ D√†nh th·ªùi gian ƒë·ªçc k·ªπ c√¢u h·ªèi v√† tr·∫£ l·ªùi b·∫±ng Ti·∫øng Vi·ªát c√≥ d·∫•u.\n‚Ä¢ Th·ªùi gian duy·ªát Whitelist c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c ch√∫ng m√¨nh x·ª≠ l√Ω trong 1 ƒë·∫øn 24 gi·ªù.`,
            // inline: true,
          },
          {
            name: `üìå \_\_L∆∞u √Ω:\_\_`,
            value: `‚Ä¢ Kh√¥ng quan tr·ªçng tu·ªïi t√°c c·ªßa b·∫°n. C√≥ th·ªÉ tu·ªïi c·ªßa b·∫°n s·∫Ω nh·ªè h∆°n 16, b·∫°n v·∫´n c√≥ th·ªÉ n·ªôp ƒë∆°n nh∆∞ng √Ω th·ª©c ch∆°i c·ªßa b·∫°n ch√≠nh l√† th·ª© ch√∫ng m√¨nh quan t√¢m.\n‚Ä¢ ƒê√¢y l√† th√†nh ph·ªë Roleplay thu·∫ßn. Nh·ªØng b·∫°n c√≥ √Ω ƒë·ªãnh tham gia th√†nh ph·ªë v·ªõi m·ª•c ƒë√≠ch n·∫±m ngo√†i Roleplay, ch√∫ng m√¨nh kh√¥ng khuy·∫øn kh√≠ch tham gia.\n‚Ä¢ Lu·∫≠t Th√†nh ph·ªë v√† Lu·∫≠t Discord s·∫Ω c√≤n thay ƒë·ªïi ƒë·ªÉ ph√π h·ª£p v·ªõi t·ª´ng giai ƒëo·∫°n, b·∫°n h√£y ch√∫ √Ω theo d√µi th√¥ng b√°o.`,
            // inline: true,
          },
          {
            name: `üìú \_\_Lu·∫≠t discord:\_\_`,
            value:
              "https://discord.com/channels/1067597880833081404/1067597882326253600",
            inline: true,
          },
          {
            name: `üìö \_\_Lu·∫≠t th√†nh ph·ªë:\_\_`,
            value:
              "https://discord.com/channels/1067597880833081404/1186165161074098196",
            inline: true,
          },
          {
            name: "‚úçÔ∏è __Cam k·∫øt:__",
            value: `B·∫±ng vi·ªác nh·∫•n v√†o \_\_**T√¥i ƒë√£ ƒë·ªçc v√† ƒë·ªìng √Ω tu√¢n th·ªß lu·∫≠t ƒë√£ ƒë·ªÅ ra**\_\_ b√™n d∆∞·ªõi, b·∫°n ƒë√£ ch·∫•p thu·∫≠n v√† tu√¢n th·ªß lu·∫≠t c·ªßa Th√†nh ph·ªë v√† lu·∫≠t c·ªßa Discord, m·ªçi vi ph·∫°m s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω theo quy ƒë·ªãnh.`,
          }
        )
        .setImage(`${process.env.BANNER_LINK}`)
        .setFooter({
          text: "DreamlandRP",
          iconURL: `${process.env.LOGO_LINK}`,
        });

      const acceptRegulationBtn = new ButtonBuilder()
        .setCustomId("acceptRegulationBtn")
        .setLabel("T√¥i ƒë√£ ƒë·ªçc v√† ƒë·ªìng √Ω tu√¢n th·ªß lu·∫≠t ƒë√£ ƒë·ªÅ ra")
        .setStyle(ButtonStyle.Primary);
      // .setEmoji("1072794991065301004");

      const row = new ActionRowBuilder().addComponents(acceptRegulationBtn);

      //Collector for acceptRegulationBtn

      const reply = await channel.send({
        embeds: [embed],
        components: [row],
      });

      const collector = reply.createMessageComponentCollector({
        componentType: ComponentType.Button,
      });

      collector.on("collect", async (interaction) => {
        if (interaction.customId === "acceptRegulationBtn") {
          let discordSaved = false;
          await interaction.deferReply({ ephemeral: true });

          const checkDiscordData = await discordData.callback(client);
          await checkDiscordData.idDiscordRegistered.find((data) => {
            if (data.includes(interaction.user.id)) {
              discordSaved = true;
            }
          });

          if (!discordSaved) {
            await createDiscordData.callback(
              client,
              checkDiscordData.pageDiscordData,
              interaction.user.id,
              interaction.user.username
            );
          }

          const openWhitelistFormBtn = new ButtonBuilder()
            .setLabel("ƒêƒÉng k√Ω Whitelist")
            .setURL(`${process.env.WHITELIST_FORM_LINK}`)
            .setStyle(ButtonStyle.Link)
            .setEmoji("1127741482791612516");
          const row = new ActionRowBuilder().addComponents(
            openWhitelistFormBtn
          );

          const embed = new EmbedBuilder()
            .setTitle("CHU·∫®N B·ªä TR·ªû TH√ÄNH C∆Ø D√ÇN DREAMLAND")
            .setDescription("B∆∞·ªõc cu·ªëi ƒë·ªÉ tr·ªü th√†nh c∆∞ d√¢n DreamLand:")
            .setColor("#CC99FF")
            .addFields({
              name: "M·ªùi b·∫°n ƒëi·ªÅn th√¥ng tin ƒë·ªÉ chu·∫©n b·ªã tr·ªü th√†nh c∆∞ d√¢n c·ªßa DreamLand:",
              value: `\n\_\_**üìå L∆∞u √Ω:**\_\_\nLu·∫≠t Th√†nh ph·ªë v√† Lu·∫≠t Discord s·∫Ω c√≤n thay ƒë·ªïi ƒë·ªÉ ph√π h·ª£p v·ªõi t·ª´ng giai ƒëo·∫°n, b·∫°n h√£y ch√∫ √Ω theo d√µi th√¥ng b√°o.\n\n\_\_C·∫£m ∆°n <@${interaction.user.id}> ƒë√£ quan t√¢m t·ªõi Dreamland\_\_ üíñ`,
            })
            .setFooter({
              text: "DreamlandRP",
              iconURL: `${process.env.LOGO_LINK}`,
            })
            .setThumbnail(`${process.env.LOGO_LINK}`);

          await interaction.editReply({ embeds: [embed], components: [row] });

          return;
        }
      });

      collector.on("end", () => {
        acceptRegulationBtn.setDisabled(true);

        reply.edit({
          components: [row],
        });
      });

      await interaction.editReply("Created");

      return;
    } catch (error) {
      console.log("create-wl-form Error:", error);
    }
  },
};
